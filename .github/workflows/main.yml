name: "Main"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags-ignore:
      - '**'

jobs:
  fvm_format:
    steps:
      - name: Formatting
        run: |
          fvm dart format -l 100 .
#      - run: flutter format --set-exit-if-changed .

  get_fvm_version:
    needs: fvm_format
    outputs:
      flutter_version: ${{ steps.fvm_version.outputs.flutterSdkVersion }}
    name: "Get Flutter version from FVM"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: fvm_version
        uses: zoexx/github-action-json-file-properties@release
        with:
          file_path: ".fvm/fvm_config.json"

  analysis:
    needs: [fvm_format, get_fvm_version]
    uses: surfstudio/flutter-ci-workflows/.github/workflows/analysis.yml@main
    inputs:
      flutter-version: ${{ needs.get_fvm_version.outputs.flutter_version }}

  testing:
    needs: [ fvm_format, get_fvm_version, analysis ]
    uses: surfstudio/flutter-ci-workflows/.github/workflows/testing.yml@main
    inputs:
      flutter-version: ${{ needs.get_fvm_version.outputs.flutter_version }}
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build_android:
      needs: [ fvm_format, get_fvm_version, analysis ]
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3

        - uses: actions/setup-java@v3
          with:
            distribution: 'zulu'
            java-version: "17"

        - uses: subosito/flutter-action@v2
          with:
            flutter-version: ${{ needs.get_fvm_version.outputs.flutter_version }}

        - name: Get dependencies
          run: flutter pub get

        - name: Start release build
          run: flutter build appbundle

  build_ios_example:
    needs: [ fvm_format, get_fvm_version, analysis ]
    uses: surfstudio/flutter-ci-workflows/.github/workflows/build_ios_example.yml@main
    inputs:
      flutter-version: ${{ needs.get_fvm_version.outputs.flutter_version }}
